/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package de.qualersoft.jmeter.gradleplugin

import io.kotest.matchers.file.exist
import io.kotest.matchers.should
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.assertAll
import kotlin.test.assertTrue

/**
 * A simple functional test for the 'de.qualersoft.jmeter' plugin.
 */
class JMeterPluginFunctionalTest : JMeterPluginFunctionalTestBase() {

  @Test
  @KotlinTag
  fun `register a run task in kotlin dsl`() {
    // Setup the test build
    rootFolder = { "runTest" }

    val runner = setupKotlinTest("default_build")
      .withArguments("tasks")

    copyJmxToDefaultLocation()

    val result = runner.build()

    assertTrue(result.output.contains("runTest"))
  }

  @Test
  @GroovyTag
  fun `register a run task in groovy dsl`() {
    // Setup the test build
    rootFolder = { "runTest" }
    val runner = setupKotlinTest("default_build")
      .withArguments("tasks")

    copyJmxToDefaultLocation()

    val result = runner.build()

    assertTrue(result.output.contains("runTest"))
  }

  @Test
  @KotlinTag
  fun `execute run task with minimum config`() {
    rootFolder = { "runTest" }
    val runner = setupKotlinTest("default_build").withArguments("runTest")
    copyJmxToDefaultLocation()

    val result = runner.forwardOutput().build()
    val resultFolder = runner.projectDir.resolve("build/test-results/jmeter")
    assertAll(
      { runShouldSucceed(result) },
      { resultFolder should exist() },
      { resultFolder.resolve("Test.jtl") should exist() }
    )
  }
}
