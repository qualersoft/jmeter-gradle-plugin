name: "Publish new release"

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    name: Create new release
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true #only merged pull requests must trigger this job
    steps:
      - uses: actions/checkout@v4.1.3

      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: "Export changelog"
        id: properties
        run: |
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "::set-output name=changelog::$CHANGELOG"

      - name: Create Release
        uses: thomaseizinger/create-release@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
          tag_name: v${{ env.RELEASE_VERSION }}
          name: ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
          body: ${{ steps.properties.outputs.changelog }}

  updateDevelop:
    name: "Reintegrate to develop"
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4.1.3
        with:
          ref: main

      - name: Publish artifact to GitHub
        uses: burrunan/gradle-cache-action@v1
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: ${{ github.actor }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MVN_CNTRL_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MVN_CNTRL_SECRET_KEY_PASS }}
        with:
          remote-build-cache-proxy-enabled: false
          save-local-build-cache: false
          arguments: publish

      - name: Publish to gradle
        uses: burrunan/gradle-cache-action@v1
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MVN_CNTRL_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MVN_CNTRL_SECRET_KEY_PASS }}
        with:
          remote-build-cache-proxy-enabled: false
          save-local-build-cache: false
          arguments: publishPlugins

      - name: prepare merge
        run: |
          git config user.name "${{ github.actor }} action"
          git config user.email "noreply@github.com"
          git fetch --all --recurse-submodules=no --progress --prune
          git checkout -b develop origin/develop
          git merge main --allow-unrelated-histories --strategy=recursive -Xtheirs --no-commit

      - name: "Update changelog"
        uses: burrunan/gradle-cache-action@v1
        with:
          remote-build-cache-proxy-enabled: false
          save-local-build-cache: false
          arguments: patchChangelog

      - name: "Create next version"
        uses: burrunan/gradle-cache-action@v1
        with:
          remote-build-cache-proxy-enabled: false
          save-local-build-cache: false
          arguments: updateVersion
          properties: kind=snapshot

      - name: Commit changes
        run: |
          git commit --message "Reintegrate main to develop + bumped version + pached changelog" -a

      - name: Push to develop
        run: git push
