name: "Build"

on:
  push:
    branches:
      - main
      - develop
      - issues/**

jobs:
  init:
    name: "Init"
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
    steps:
      - name: "Check out sources"
        uses: actions/checkout@v2

      - name: "Extract branch name"
        id: extract_branch
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: "Cache source"
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/**
          key: ${{ runner.os }}-sources-${{ github.run_id }}

      - name: "init gradle cache"
        uses: burrunan/gradle-cache-action@v1

  staticDetektCheck:
    name: "Detekt - static check"
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: "Check out sources"
        uses: actions/checkout@v2

      - name: "Detekt"
        uses: burrunan/gradle-cache-action@v1
        with:
          arguments: detekt

      - name: "Upload detekt report"
        uses: actions/upload-artifact@v2
        with:
          name: detektReport
          path: build/reports/detekt

  licenceCheck:
    name: "Fossa licence analyze - static check"
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: "Check out sources"
        uses: actions/checkout@v2

      - name: "Fossa analyze"
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}

      - name: "Fossa test"
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
          run-tests: true

  compile:
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: "Check out sources"
        uses: actions/checkout@v2

      - name: "Compile cache"
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/**
          key: ${{ runner.os }}-compile-${{ github.run_id }}

      - name: "Compile"
        uses: burrunan/gradle-cache-action@v1
        with:
          remote-build-cache-proxy-enabled: false
          save-local-build-cache: false
          arguments: classes

  unitTest:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: "Check out sources"
        uses: actions/checkout@v2

      - name: "Load compile cache"
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/**
          key: ${{ runner.os }}-compile-${{ github.run_id }}

      - name: "Unit test cache"
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/**
          key: ${{ runner.os }}-test-${{ github.run_id }}

      - name: "Unit test"
        uses: burrunan/gradle-cache-action@v1
        with:
          remote-build-cache-proxy-enabled: false
          save-local-build-cache: false
          arguments: |
            test
            jacocoTestReport

      - name: "Publish Unit Test Results"
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          check_name: "Unit test results"
          files: build/test-results/**/*.xml

      - name: "Upload unit test report"
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: unitTestReport
          path: build/reports/tests/test

  functionalTest:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: "Check out sources"
        uses: actions/checkout@v2

      - name: "Load compile cache"
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/**
          key: ${{ runner.os }}-compile-${{ github.run_id }}

      - name: "Functional test cache"
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/**
          key: ${{ runner.os }}-funcTest-${{ github.run_id }}

      - name: "Functional tests"
        uses: burrunan/gradle-cache-action@v1
        with:
          remote-build-cache-proxy-enabled: false
          save-local-build-cache: false
          arguments: |
            functionalTest
            jacocoFunctionalTestReport

      - name: "Publish functional test results"
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          check_name: "Functional test results"
          files: build/test-results/functionalTest/*.xml

      - name: "Upload functional test report"
        uses: actions/upload-artifact@v2
        if: always()
        with:
         name: functionalTestReport
         path: build/reports/tests/functionalTest

  report:
    runs-on: ubuntu-latest
    needs:
      - unitTest
      - functionalTest
    steps:
      - name: "Check out sources"
        uses: actions/checkout@v2

      - name: "Load test cache"
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/**
          key: ${{ runner.os }}-test-${{ github.run_id }}

      - name: "Load functional test cache"
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/**
          key: ${{ runner.os }}-functest-${{ github.run_id }}

      - name: "Publish Report"
        uses: codecov/codecov-action@v2

  publishSnapshot:
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.ref == 'develop'
    needs:
      - report
      - licenceCheck
    steps:
      - name: "Check out sources"
        uses: actions/checkout@v2

      - name: "Load compile cache"
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/build/**
          key: ${{ runner.os }}-compile-${{ github.run_id }}

      - name: "Publish"
        uses: burrunan/gradle-cache-action@v1
        env:
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ github.token }}
        with:
          remote-build-cache-proxy-enabled: false
          save-local-build-cache: false
          arguments: publish
